load("@npm//@bazel/typescript:index.bzl", "ts_project")
load("@npm//webpack-cli:index.bzl", webpack = "webpack_cli")
load("@build_bazel_rules_nodejs//:index.bzl", "nodejs_binary")
load("@npm//@bazel/rollup:index.bzl", "rollup_bundle")

rollup_bundle(
    name = "bundle_rollup",
    entry_point = ":main",
    format = "iife",
    visibility = ["//visibility:public"],
    deps = [
        ":main",
    ],
)

ts_project(
    name = "main",
    srcs = [
        "main.tsx",
    ],
    link_workspace_root = True,
    composite = True,
    tsconfig = "//:tsconfig",
    visibility = [
        "//visibility:public",
    ],
    deps = [
        "//hermes/example:hello_world_service_ts_proto",
        "@npm//@opentelemetry/api",
        "@npm//@opentelemetry/context-zone",
        "@npm//@opentelemetry/instrumentation",
        "@npm//@opentelemetry/instrumentation-grpc",
        "@npm//@opentelemetry/sdk-trace-base",
        "@npm//@opentelemetry/sdk-trace-web",
        "@npm//@types/express",
        "@npm//@types/google-protobuf",
        "@npm//@types/node",
        "@npm//@types/react",
        "@npm//@types/react-dom",
        "@npm//grpc-web",
    ],
)

nodejs_binary(
    name = "example",
    data = [
        ":main",
    ],
    entry_point = ":main",
    link_workspace_root = True,
)

webpack(
    name = "bundle",
    outs = ["app.bundle.js"],
    args = [
        "./$(location :main)",
        "--config",
        "./$(location :webpack)",
        "-o",
        "$@",
    ],
    data = [
        ":main",
        ":webpack",
        "//hermes/example:hello_world_service_ts_proto",
        "@npm//:node_modules",
    ],
    link_workspace_root = True,
    visibility = ["//visibility:public"],
)

ts_project(
    name = "webpack",
    srcs = [
        "webpack.config.ts",
    ],
    composite = True,
    link_workspace_root = True,
    tsconfig = "//:tsconfig",
    deps = [
        "@npm//@bazel/runfiles",
        "@npm//@types/webpack",
    ],
)
